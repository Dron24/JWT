// Это позволяет другим файлам импортировать этот класс как модуль
module.exports = class ApiError extends Error {
    // Это поле для хранения HTTP статуса ошибки
    status;
    // Это поле для хранения дополнительной информации об ошибках
    errors;

    // Это конструктор класса, который вызывается при создании нового экземпляра класса
    constructor(status, message, errors = []) {
        // Вызов родительского конструктора с сообщением об ошибке
        super(message);
        // Здесь статус ошибки сохраняется в поле status
        this.status = status;
        // Здесь дополнительная информация об ошибках сохраняется в поле errors
        this.errors = errors;
    }

    // Это статический метод, который создает и возвращает новый экземпляр ApiError 
    // с HTTP статусом 401 (Не авторизован) и сообщением 'Пользователь не авторизован'
    static UnauthorizedError () {
        return new ApiError(401, 'Пользователь не авторизован')
    }
    // Это статический метод, который создает и возвращает новый экземпляр ApiError 
    // с HTTP статусом 400 (Неверный запрос) и заданным сообщением об ошибке и дополнительной информацией об ошибках
    static BadRequest (message, errors = []) {
        return new ApiError(400, message, errors);
    }
}
